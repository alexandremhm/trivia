{"version":3,"sources":["trivia.png","actions/index.js","service/handleLocalStorage.js","components/LoginForm.jsx","pages/Login.jsx","service/requestAvatar.js","components/HeaderGame.jsx","components/Question.jsx","pages/Game.jsx","pages/Feedback.jsx","pages/Ranking.jsx","pages/Footer.jsx","serviceWorker.js","reducers/loginReducer.js","reducers/gameReducer.js","reducers/index.js","store/index.js","index.js","App.js"],"names":["module","exports","requestToken","payload","type","resetStore","name","email","localStorage","removeItem","store","player","gravatarEmail","assertions","score","setItem","JSON","stringify","getFromStore","key","parse","getItem","saveRankPlayer","picture","receivedRanking","newArray","LoginForm","handleChange","this","props","className","htmlFor","placeholder","id","onChange","e","data-testid","Component","Login","state","disabled","ready","bind","checkInputs","handleLogin","target","value","setState","token","initToken","setLogin","getQuestions","handleLocalStorage","length","onClick","to","defaultProps","connect","loginReducer","dispatch","fetch","then","response","json","result","catch","error","requestQuestionsSuccess","fetchQuestions","fetchAvatar","hashEmail","data","url","Header","setAvatar","md5","toString","avatarUrl","src","alt","gameReducer","currentQuestion","Question","nextIsDisabled","redirectToFeedback","isAnswered","handleClick","handleDisabledButton","handleNextQuestion","returnNextButton","calculateScore","nextQuestion","reset","clearInterval","addNewScore","receivedStore","saveScoreToStore","saveAssertionToStore","count","scoreNumbers","question","difficulty","Number","category","correctAnswer","correct_answer","incorrectAnswers","incorrect_answers","map","answer","index","addScore","Game","counter","counterFunc","resetCounter","clearCounterInterval","interval","setInterval","questionArray","HeaderGame","questions","Feedback","resultQuestions","prepareNewGame","correctAnswers","Ranking","rankingArray","sort","ranking1","ranking2","Footer","href","Boolean","window","location","hostname","match","INITIAL_STATE","isLoading","results","maxNumber","rootReducer","combineReducers","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","Store","basename","logo","exact","path","component","document","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.d11af8c4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/trivia.466d153e.png\";","export const LOGIN = 'LOGIN';\nexport const REQUEST_TOKEN = 'REQUEST_TOKEN';\nexport const REQUEST_TOKEN_SUCCESS = 'REQUEST_TOKEN_SUCCESS';\nexport const REQUEST_TOKEN_ERROR = 'REQUEST_TOKEN_ERROR';\nexport const REQUEST_QUESTIONS = 'REQUEST_QUESTIONS';\nexport const REQUEST_QUESTIONS_SUCCESS = 'REQUEST_QUESTIONS_SUCCESS';\nexport const ADD_SCORE = 'ADD_SCORE';\nexport const NEXT_QUESTION = 'NEXT_QUESTION';\nexport const NEW_GAME = 'NEW_GAME';\n\nexport const loginAction = (payload) => ({\n  type: LOGIN,\n  payload,\n});\n\nexport const requestToken = (payload) => ({\n  type: REQUEST_TOKEN,\n  payload,\n});\n\nexport const requestTokenSuccess = (payload) => ({\n  type: REQUEST_TOKEN_SUCCESS,\n  payload,\n});\n\nexport const requestTokenError = (payload) => ({\n  type: REQUEST_TOKEN_ERROR,\n  payload,\n});\n\nexport const requestQuestions = (payload) => ({\n  type: REQUEST_QUESTIONS,\n  payload,\n});\n\nexport const requestQuestionsSuccess = (payload) => ({\n  type: REQUEST_QUESTIONS_SUCCESS,\n  payload,\n});\n\nexport const addScore = (payload) => ({\n  type: ADD_SCORE,\n  payload,\n});\n\nexport const nextQuestion = () => ({\n  type: NEXT_QUESTION,\n});\n\nexport const newGame = () => ({\n  type: NEW_GAME,\n});\n\nexport const fetchToken = () => (dispatch) => {\n  dispatch(requestToken);\n  return (fetch('https://opentdb.com/api_token.php?command=request'))\n    .then((response) => response.json())\n    .then((result) => dispatch(requestTokenSuccess(result)))\n    .catch((error) => dispatch(requestTokenError(error)));\n};\n\nexport const fetchQuestions = (token) => (dispatch) => {\n  dispatch(requestQuestions());\n  return (fetch(`https://opentdb.com/api.php?amount=5&token=${token}`))\n    .then((response) => response.json())\n    .then((result) => dispatch(requestQuestionsSuccess(result)));\n};\n","export const resetStore = (name, email) => {\n  localStorage.removeItem('state');\n  const store = {\n    player: {\n      name,\n      gravatarEmail: email,\n      assertions: 0,\n      score: 0,\n    },\n  };\n  localStorage.setItem('state', JSON.stringify(store));\n};\n\nexport const getFromStore = (key) => {\n  const store = JSON.parse(localStorage.getItem(key));\n  return store;\n};\n\nexport const saveTokenToStore = (value) => {\n  localStorage.setItem('token', JSON.stringify(value));\n};\n\nexport const saveScoreToStore = (value) => {\n  const defaultStore = {\n    player: {\n      score: 0,\n    },\n  };\n\n  const receivedStore = getFromStore('state') || defaultStore;\n  receivedStore.player.score += value;\n  localStorage.setItem('state', JSON.stringify(receivedStore));\n};\n\nexport const saveToStore = (key, value) => {\n  const defaultStore = {\n    player: {},\n  };\n  const receivedStore = getFromStore('state') || defaultStore;\n  const { player } = receivedStore;\n  player[key] = value;\n  localStorage.setItem('state', JSON.stringify(receivedStore));\n};\n\nexport const saveAssertionToStore = () => {\n  const defaultStore = {\n    player: {\n      assertions: 0,\n    },\n  };\n\n  const receivedStore = getFromStore('state') || defaultStore;\n  receivedStore.player.assertions += 1;\n  localStorage.setItem('state', JSON.stringify(receivedStore));\n};\n\nexport const saveRankPlayer = (name, score, picture) => {\n  const defaultRanking = [];\n  const receivedRanking = getFromStore('ranking') || defaultRanking;\n  const newArray = [...receivedRanking, { name, score, picture }];\n  localStorage.setItem('ranking', JSON.stringify(newArray));\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport '../styles/loginForm.css';\n\nexport default class LoginForm extends Component {\n  render() {\n    const { handleChange } = this.props;\n    return (\n      <div className=\"box loginForm-div\">\n        <div className=\"field columns\">\n          <label htmlFor=\"input-name\" className=\"label\">\n            <div className=\"control has-icons-left has-icons-right column is-full\">\n              <input\n                className=\"input is-link\"\n                type=\"text\"\n                placeholder=\"Digite seu nome\"\n                id=\"input-name\"\n                onChange={ (e) => handleChange(e) }\n                data-testid=\"input-player-name\"\n                name=\"name\"\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"field columns\">\n          <label htmlFor=\"input-email\" className=\"label\">\n            <div className=\"control has-icons-left has-icons-right column is-full\">\n              <input\n                className=\"input is-link\"\n                type=\"email\"\n                placeholder=\"Digite seu email\"\n                id=\"input-email\"\n                onChange={ (e) => handleChange(e) }\n                name=\"email\"\n                data-testid=\"input-gravatar-email\"\n              />\n            </div>\n          </label>\n        </div>\n      </div>\n    );\n  }\n}\n\nLoginForm.propTypes = ({\n  handleChange: PropTypes.func.isRequired,\n});\n","/* eslint-disable no-return-assign */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nimport { fetchToken, loginAction, fetchQuestions } from '../actions';\nimport {\n  saveTokenToStore,\n  resetStore,\n} from '../service/handleLocalStorage';\nimport LoginForm from '../components/LoginForm';\nimport '../styles/login.css';\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      disabled: true,\n      email: '',\n      name: '',\n      ready: false,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.checkInputs = this.checkInputs.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n  }\n\n  handleChange({ target: { name, value } }) {\n    this.setState({\n      [name]: value,\n    }, () => { this.checkInputs(); });\n  }\n\n  handleLocalStorage() {\n    const { token } = this.props;\n    saveTokenToStore(token);\n  }\n\n  async handleLogin() {\n    const { name, email } = this.state;\n    const { initToken, setLogin, getQuestions } = this.props;\n    resetStore(name, email);\n    await initToken();\n    const { token } = this.props;\n    this.handleLocalStorage();\n    await getQuestions(token);\n    setLogin(name, email);\n    this.setState({\n      ready: true,\n    });\n  }\n\n  checkInputs() {\n    const { email, name } = this.state;\n    if (email.length > 0 && name.length > 0) {\n      this.setState({\n        disabled: false,\n      });\n    } else {\n      this.setState({\n        disabled: true,\n      });\n    }\n  }\n\n  render() {\n    const { disabled, ready } = this.state;\n    return (\n      <div className=\"login-container\">\n        <form className=\"login-form\">\n          <LoginForm handleChange={ this.handleChange } />\n          <button\n            type=\"button\"\n            onClick={ this.handleLogin }\n            data-testid=\"btn-play\"\n            disabled={ disabled }\n            className=\"login-btn button\"\n          >\n            Jogar\n          </button>          \n        </form>\n        { ready && <Redirect to=\"/game\" />}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ loginReducer }) => ({\n  token: loginReducer.token,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  initToken: () => dispatch(fetchToken()),\n  setLogin: (name, email) => dispatch(loginAction({ name, email })),\n  getQuestions: (token) => dispatch(fetchQuestions(token)),\n});\n\nLogin.propTypes = ({\n  initToken: PropTypes.func.isRequired,\n  token: PropTypes.string,\n  setLogin: PropTypes.func.isRequired,\n  getQuestions: PropTypes.func.isRequired,\n});\n\nLogin.defaultProps = ({\n  token: '',\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","const fetchAvatar = (hashEmail) => fetch(`https://www.gravatar.com/avatar/${hashEmail}`)\n  .then((data) => ((data.url)));\n\nexport default fetchAvatar;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport md5 from 'crypto-js/md5';\nimport fetchAvatar from '../service/requestAvatar';\nimport '../styles/headerGame.css';\n\nclass Header extends Component {\n  constructor() {\n    super();\n    this.state = { };\n    this.setAvatar = this.setAvatar.bind(this);\n  }\n\n  async componentDidMount() {\n    const { email } = this.props;\n    const hashEmail = md5(email).toString();\n    const avatarUrl = await fetchAvatar(hashEmail);\n    this.setAvatar(avatarUrl);\n  }\n\n  setAvatar(url) {\n    this.setState({\n      url,\n    });\n  }\n\n  render() {\n    const { name, score } = this.props;\n    const { url } = this.state;\n    return (\n      <header className=\"headerGame\">\n        <div className=\"headerGame-img\">\n          <img src={ url } alt=\"avatar\" data-testid=\"header-profile-picture\" />\n        </div>\n        <div className=\"headerGame-info\">\n          <h3 data-testid=\"header-player-name\">{ name }</h3>\n          <h4 data-testid=\"header-score\">{ `Score: ${score}`}</h4>\n        </div>\n      </header>\n    );\n  }\n}\n\nconst mapStateToProps = ({ loginReducer, gameReducer }) => ({\n  email: loginReducer.email,\n  name: loginReducer.name,\n  score: gameReducer.score,\n  currentQuestion: gameReducer.currentQuestion,\n});\n\nexport default connect(mapStateToProps)(Header);\n\nHeader.propTypes = {\n  email: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  score: PropTypes.number.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router';\nimport { saveScoreToStore, saveAssertionToStore } from '../service/handleLocalStorage';\nimport { nextQuestion as newQuestion, addScore } from '../actions';\nimport '../styles/question.css';\n\nclass Question extends Component {\n  constructor() {\n    super();\n    this.state = {\n      nextIsDisabled: true,\n      redirectToFeedback: false,\n      isAnswered: false,\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleDisabledButton = this.handleDisabledButton.bind(this);\n    this.handleNextQuestion = this.handleNextQuestion.bind(this);\n    this.returnNextButton = this.returnNextButton.bind(this);\n    this.calculateScore = this.calculateScore.bind(this);\n    this.handleLocalStorage = this.handleLocalStorage.bind(this);\n  }\n\n  handleNextQuestion() {\n    const { nextQuestion, currentQuestion, reset } = this.props;\n    this.setState({\n      nextIsDisabled: true,\n      isAnswered: false,\n    }, () => {\n      const maxIndex = 4;\n      if (currentQuestion === maxIndex) {\n        this.setState({\n          redirectToFeedback: true,\n        });\n      }\n      nextQuestion();\n      reset();\n    });\n  }\n\n  handleDisabledButton() {\n    this.setState({\n      nextIsDisabled: false,\n    });\n  }\n\n  handleClick() {\n    const { clearInterval } = this.props;\n    clearInterval();\n    this.handleDisabledButton();\n    this.setState({\n      isAnswered: true,\n    });\n  }\n\n  handleLocalStorage(score) {\n    const { addNewScore } = this.props;\n    addNewScore(score);\n    saveScoreToStore(score);\n    saveAssertionToStore();\n  }\n\n  calculateScore() {\n    const { count, question: { difficulty } } = this.props;\n    const scoreNumbers = { easy: 1, medium: 2, hard: 3, default: 10 };\n    switch (difficulty) {\n    case ('easy'): {\n      const score = scoreNumbers.default + (Number(count) * scoreNumbers.easy);\n      this.handleLocalStorage(score);\n      break;\n    }\n    case ('medium'): {\n      const score = scoreNumbers.default + (Number(count) * scoreNumbers.medium);\n      this.handleLocalStorage(score);\n      break;\n    }\n    case ('hard'): {\n      const score = scoreNumbers.default + (Number(count) * scoreNumbers.hard);\n      this.handleLocalStorage(score);\n      break;\n    }\n    default:\n      break;\n    }\n  }\n\n  returnNextButton() {\n    return (\n      <button\n        type=\"button\"\n        onClick={ this.handleNextQuestion }\n        data-testid=\"btn-next\"\n        className=\"next-btn button\"\n      >\n        PRÓXIMA\n      </button>\n    );\n  }\n\n  render() {\n    const { nextIsDisabled, redirectToFeedback, isAnswered } = this.state;\n    const { question: {\n      category,\n      question,\n      correct_answer: correctAnswer,\n      incorrect_answers: incorrectAnswers,\n    }, disabled } = this.props;\n    return (\n      <div className=\"question-container\">\n        <div className=\"question-header\">\n          { redirectToFeedback && <Redirect to=\"/feedback\" /> }\n          <p id=\"question-text\" data-testid=\"question-text\">{question}</p>\n          <p id=\"category\" data-testid=\"question-category\">{`Category: ${category}`}</p>\n        </div>\n        <div className=\"question-btn-container\">\n          <button\n            type=\"button\"\n            data-testid=\"correct-answer\"\n            className={ isAnswered ? 'button question-btn correct-color'\n              : 'button question-btn' }\n            onClick={ () => {\n              this.calculateScore();\n              this.handleClick();\n            } }\n            disabled={ disabled }\n          >\n            {correctAnswer}\n          </button>\n          {incorrectAnswers.map((answer, index) => (\n            <button\n              type=\"button\"\n              key={ index }\n              data-testid=\"wrong-answer\"\n              className={ isAnswered ? 'button question-btn wrong-color'\n                : 'button question-btn' }\n              onClick={ this.handleClick }\n              disabled={ disabled }\n            >\n              {answer}\n            </button>\n          ))}\n        </div>\n        <div className=\"next-btn-container\">\n          { disabled || !nextIsDisabled ? this.returnNextButton() : null }\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ gameReducer }) => ({\n  currentQuestion: gameReducer.currentQuestion,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  nextQuestion: () => dispatch(newQuestion()),\n  addNewScore: (payload) => dispatch(addScore(payload)),\n});\n\nQuestion.propTypes = ({\n  question: PropTypes.shape({\n    category: PropTypes.string,\n    type: PropTypes.string,\n    question: PropTypes.string,\n    difficulty: PropTypes.string,\n    correct_answer: PropTypes.string,\n    incorrect_answers: PropTypes.arrayOf(PropTypes.string),\n  }).isRequired,\n  nextQuestion: PropTypes.func.isRequired,\n  currentQuestion: PropTypes.number.isRequired,\n  disabled: PropTypes.bool.isRequired,\n  count: PropTypes.number.isRequired,\n  reset: PropTypes.func.isRequired,\n  clearInterval: PropTypes.func.isRequired,\n  addNewScore: PropTypes.func.isRequired,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Question);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport HeaderGame from '../components/HeaderGame';\nimport Question from '../components/Question';\nimport '../styles/game.css';\n\nclass Game extends Component {\n  constructor() {\n    super();\n    this.state = {\n      count: 30,\n      disabled: false,\n    };\n    this.counter = this.counter.bind(this);\n    this.counterFunc = this.counterFunc.bind(this);\n    this.resetCounter = this.resetCounter.bind(this);\n    this.clearCounterInterval = this.clearCounterInterval.bind(this);\n  }\n\n  componentDidMount() {\n    this.counter();\n  }\n\n  resetCounter() {\n    this.setState({\n      count: 30,\n      disabled: false,\n    });\n    this.counter();\n  }\n\n  counterFunc() {\n    const { count } = this.state;\n    if (count > 0) {\n      this.setState({\n        count: count - 1,\n      });\n    } else if (count === 0) {\n      this.clearCounterInterval();\n      this.setState({\n        count: 0,\n        disabled: true,\n      });\n    }\n  }\n\n  clearCounterInterval() {\n    clearInterval(this.interval);\n  }\n\n  counter() {\n    const interval = 1000;\n    this.interval = setInterval(this.counterFunc, interval);\n  }\n\n  render() {\n    const { questionArray, currentQuestion } = this.props;\n    const { disabled, count } = this.state;\n    if (questionArray.length === 0) return <h1>loading...</h1>;\n    return (\n      <div className=\"game-container\">\n        <HeaderGame />\n        <Question\n          count={ count }\n          counter={ this.counter }\n          clearInterval={ this.clearCounterInterval }\n          reset={ this.resetCounter }\n          question={ questionArray[currentQuestion] }\n          disabled={ disabled }\n        />\n        <div className=\"game-counter\">{ count }</div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ gameReducer }) => ({\n  questionArray: gameReducer.questions,\n  currentQuestion: gameReducer.currentQuestion,\n});\n\nGame.propTypes = ({\n  questionArray: PropTypes.arrayOf(PropTypes.object),\n  currentQuestion: PropTypes.number,\n});\n\nGame.defaultProps = ({\n  questionArray: [],\n  currentQuestion: 0,\n});\n\nexport default connect(mapStateToProps)(Game);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport md5 from 'crypto-js/md5';\nimport { newGame } from '../actions';\nimport HeaderGame from '../components/HeaderGame';\nimport fetchAvatar from '../service/requestAvatar';\nimport { saveRankPlayer } from '../service/handleLocalStorage';\nimport '../styles/feedback.css';\n\nclass Feedback extends Component {\n  constructor() {\n    super();\n    this.state = { };\n    this.resultQuestions = this.resultQuestions.bind(this);\n    this.setAvatar = this.setAvatar.bind(this);\n  }\n\n  async componentDidMount() {\n    const { email, score, name } = this.props;\n    const hashEmail = md5(email).toString();\n    const avatarUrl = await fetchAvatar(hashEmail);\n    this.setAvatar(avatarUrl);\n    const { url } = this.state;\n    saveRankPlayer(name, score, url);\n  }\n\n  setAvatar(url) {\n    this.setState({\n      url,\n    });\n  }\n\n  resultQuestions() {\n    const lessThree = 'Podia ser melhor...';\n    const moreThree = 'Mandou bem!';\n    const numberHits = 3;\n    const { questions } = this.props;\n    if (questions >= numberHits) {\n      return (\n        <p data-testid=\"feedback-text\">\n          {moreThree}\n        </p>);\n    }\n    return (\n      <p data-testid=\"feedback-text\">\n        {lessThree}\n      </p>);\n  }\n\n  render() {\n    const { score, questions, prepareNewGame } = this.props;\n    return (\n      <div className=\"feedback-container\">\n        <HeaderGame />\n        <div className=\"feedback-wrapper\">\n          <div className=\"feedback-message\">\n            {this.resultQuestions()}\n          </div>\n          <div className=\"feedback-score\">\n            <p data-testid=\"feedback-total-score\">{ `Score: ${score}` }</p>\n            <p\n              data-testid=\"feedback-total-question\"\n            >\n              { `Questões acertadas: ${questions}` }\n            </p>\n          </div>\n        </div>\n        <Link\n          data-testid=\"btn-play-again\"\n          className=\"button question-btn feedback-btn\"\n          to=\"/\"\n          onClick={ () => prepareNewGame() }\n        >\n          Jogar novamente\n        </Link>\n        <Link\n          data-testid=\"btn-ranking\"\n          to=\"/ranking\"\n          className=\"button question-btn feedback-btn\"\n        >\n          Ver Ranking\n        </Link>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ gameReducer, loginReducer }) => ({\n  questions: gameReducer.correctAnswers,\n  score: gameReducer.score,\n  email: loginReducer.email,\n  name: loginReducer.name,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  prepareNewGame: () => dispatch(newGame()),\n});\n\nFeedback.propTypes = ({\n  questions: PropTypes.string,\n  store: PropTypes.number,\n  prepareNewGame: PropTypes.func,\n}).isRequired;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Feedback);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { newGame } from '../actions';\nimport { getFromStore } from '../service/handleLocalStorage';\nimport '../styles/ranking.css';\n\nclass Ranking extends Component {\n  render() {\n    const { prepareNewGame } = this.props;\n    const rankingArray = getFromStore('ranking')\n      .sort((ranking1, ranking2) => ranking2.score - ranking1.score);\n    return (\n      <div className=\"ranking-container\">\n        <h1 className=\"ranking-title\" data-testid=\"ranking-title\">\n          Ranking\n        </h1>\n        {rankingArray.map(({ name, score, picture }, index) => (\n          <div className=\"ranking-wrapper\" key={ index }>\n            <div className=\"ranking-img\">\n              <img src={ picture } alt=\"player\" />\n            </div>\n            <div className=\"ranking-info\">\n              <p\n                className=\"ranking-name\"\n                data-testid={ `player-name-${index}` }\n              >\n                {name}\n              </p>\n              <p\n                className=\"ranking-score\"\n                data-testid={ `player-score-${index}` }\n              >\n                {`Score: ${score}`}\n              </p>\n            </div>\n          </div>\n        ))}\n        <Link\n          to=\"/\"\n          className=\"button question-btn\"\n          data-testid=\"btn-go-home\"\n          onClick={ () => prepareNewGame() }\n        >\n          Voltar para a tela inical\n        </Link>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  prepareNewGame: () => dispatch(newGame()),\n});\n\nRanking.propTypes = ({\n  prepareNewGame: PropTypes.func.isRequired,\n});\n\nexport default connect(null, mapDispatchToProps)(Ranking);\n","import React, { Component } from 'react'\n\nexport default class Footer extends Component {\n  render() {\n    return (\n      <div className=\"footer\">\n        <div className=\"footer-container\">\n          <h4>Desenvolvido por:</h4>\n          <a href=\"https://github.com/eduardoputinatti\" target=\"blank\">Eduardo Putinatti</a>\n          <a href=\"https://github.com/vitilevi\" target=\"blank\">Victor Faria</a>\n          <a href=\"https://github.com/silvallenilsom\" target=\"blank\">Lenilsom Silva</a>\n          <a href=\"https://github.com/alexandremhm\" target=\"blank\">Matheus Alexandre</a>\n        </div>\n      </div>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  REQUEST_TOKEN,\n  REQUEST_TOKEN_SUCCESS,\n  LOGIN,\n} from '../actions';\n\nconst INITIAL_STATE = {\n  token: {},\n  isLoading: false,\n  name: '',\n  email: '',\n};\n\nconst loginReducer = (state = INITIAL_STATE, { type, payload }) => {\n  switch (type) {\n  case REQUEST_TOKEN:\n    return {\n      ...state,\n      isLoading: true,\n    };\n  case REQUEST_TOKEN_SUCCESS:\n    return {\n      ...state,\n      isLoading: false,\n      token: payload.token,\n    };\n  case LOGIN:\n    return {\n      ...state,\n      name: payload.name,\n      email: payload.email,\n    };\n  default:\n    return {\n      ...state,\n    };\n  }\n};\n\nexport default loginReducer;\n","import {\n  REQUEST_QUESTIONS,\n  REQUEST_QUESTIONS_SUCCESS,\n  ADD_SCORE,\n  NEXT_QUESTION,\n  NEW_GAME,\n} from '../actions';\n\nconst INITIAL_STATE = {\n  questions: [],\n  isLoading: false,\n  score: 0,\n  correctAnswers: 0,\n  currentQuestion: 0,\n};\n\nconst gameReducer = (state = INITIAL_STATE, { type, payload }) => {\n  switch (type) {\n  case REQUEST_QUESTIONS:\n    return {\n      ...state,\n      isLoading: true,\n    };\n  case REQUEST_QUESTIONS_SUCCESS:\n    return {\n      ...state,\n      isLoading: false,\n      questions: [...payload.results],\n    };\n  case ADD_SCORE:\n    return {\n      ...state,\n      score: state.score + payload,\n      correctAnswers: state.correctAnswers + 1,\n    };\n  case NEXT_QUESTION: {\n    const maxNumber = 4;\n    if (state.currentQuestion === maxNumber) {\n      return {\n        ...state,\n      };\n    }\n    return {\n      ...state,\n      currentQuestion: state.currentQuestion + 1,\n    };\n  }\n  case NEW_GAME:\n    return {\n      ...state,\n      questions: [],\n      isLoading: false,\n      score: 0,\n      correctAnswers: 0,\n      currentQuestion: 0,\n    };\n  default:\n    return {\n      ...state,\n    };\n  }\n};\n\nexport default gameReducer;\n","import { combineReducers } from 'redux';\nimport loginReducer from './loginReducer';\nimport gameReducer from './gameReducer';\n\nconst rootReducer = combineReducers({\n  loginReducer,\n  gameReducer,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Store from './store';\n\nReactDOM.render(\n  <Provider store={ Store }>\n    <BrowserRouter basename=\"/trivia\">\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport { Route, Switch } from 'react-router';\nimport logo from './trivia.png';\nimport Login from './pages/Login';\nimport Game from './pages/Game';\nimport Feedback from './pages/Feedback';\nimport Ranking from './pages/Ranking';\nimport Footer from './pages/Footer';\nimport './styles/Footer.css';\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={ logo } className=\"App-logo\" alt=\"logo\" />\n      </header>\n      <Switch>\n        <Route exact path=\"/\" component={ Login } />\n        <Route path=\"/game\" component={ Game } />\n        <Route path=\"/feedback\" component={ Feedback } />\n        <Route path=\"/ranking\" component={ Ranking } />\n      </Switch>\n      <Footer />\n    </div>\n  );\n}\n"],"sourceRoot":""}